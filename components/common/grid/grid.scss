@import "~assets/scss/variables";
@import "~assets/scss/mixins";
// mixins
@mixin col($clsPrefix,$size,$number) {

  @if ($size == span) {
    $size: #{''};
  } @else {
    $size: -#{$size};
  }
  .#{$clsPrefix}#{$size}-0 {
    display: none;
  }
  @for $i from 1 through $number {
    .#{$clsPrefix}#{$size}-#{$i} {
      width: $i / $number * 100%;
    }
    .#{$clsPrefix}#{$size}-pull-#{$i} {
      position: relative;
      right: $i / $number * 100%;
    }
    .#{$clsPrefix}#{$size}-offset-#{$i} {
      margin-left: $number / 24 * 100%;
    }
    .#{$clsPrefix}#{$size}-push-#{$i} {
      position: relative;
      left: $i / $number * 100%;
    }
  }
}

@mixin media-col($breakpoints) {
  @each $key in map_keys($breakpoints) {
    @media only screen and #{map_get($breakpoints,$key)}{
      @include col(c-col, $key, 24)
    }
  }
}

// row
.c-row {
  position: relative;
  box-sizing: border-box;
  @include clearfix;

  &--flex {
    display: flex;
    &:before,
    &:after {
      display: none;
    }
    &.c-row--start {
      justify-content: flex-start;
    }
    &.c-row--end {
      justify-content: flex-end;
    }
    &.c-row--center {
      justify-content: center;
    }
    &.c-row--space-around {
      justify-content: space-around;
    }
    &.c-row--space-between {
      justify-content: space-between;
    }
    &.c-row--top {
      align-items: flex-start;
    }
    &.c-row--middle {
      align-items: center;
    }
    &.c-row--bottom {
      align-items: flex-end;
    }
  }
}

// col
.c-col {
  float: left;
  box-sizing: border-box;
}

@include col(c-col, span, 24);
@include media-col($grid-breakpoints);




